name: Java CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - release

env:
  ENV: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}  # 브랜치에 따라 환경 자동 설정

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          gradle-version: '8.7'

      # Gradle 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew :user-api:build -x test

      # 빌드된 파일 확인 및 복사
      - name: Copy JAR to root
        run: cp user-api/build/libs/user-api-0.0.1-SNAPSHOT.jar app.jar

      # 최상위 디렉토리에 .jar 파일이 있는지 확인
      - name: Check root directory contents
        run: ls -la

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image to GHCR
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-java-service:latest -f user-api/Dockerfile .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository }}/my-java-service:latest
