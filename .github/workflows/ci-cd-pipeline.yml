name: Java CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - release

env:
  ENV: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}  # 브랜치에 따라 환경 자동 설정

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          gradle-version: '8.7'

      - name: Build with Gradle Wrapper
        run: ./gradlew :user-api:build -x test

      - name: Build and Push Docker Image to GHCR
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-java-service:${{ env.ENV }}-latest -f user-api/Dockerfile .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository }}/my-java-service:${{ env.ENV }}-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Deploy to EC2
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets[format('ALLCLIMB_{0}_EC2_HOST', env.ENV | upper)] }}
          username: ${{ secrets[format('ALLCLIMB_{0}_EC2_USER', env.ENV | upper)] }}
          key: ${{ secrets[format('ALLCLIMB_{0}_EC2_SSH_KEY', env.ENV | upper)] }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}/my-java-service:${{ env.ENV }}-latest
            docker compose -f /path/to/docker-compose.yml up -d
