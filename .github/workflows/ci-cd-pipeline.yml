name: Java CI/CD Pipeline for allclimb/allclimb-black

on:
  push:
    branches:
      - dev
      - release
  workflow_dispatch:

env:
  SERVICE_NAME: "allclimb-black"
  PROJECT_NAME: "allclimb"
  BUILD_NUMBER: ${{ github.run_number }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}  # 환경 자동 선택

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582
        with:
          gradle-version: '8.7'

      # Gradle 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew :user-api:build -x test

      # 빌드된 JAR 파일을 최상위 디렉토리로 이동
      - name: Copy JAR to root
        run: cp user-api/build/libs/user-api-0.0.1-SNAPSHOT.jar app.jar

      # Docker 이미지 빌드 및 푸시
      - name: Build and Push Docker Image to GHCR
        run: |
          IMAGE_TAG=${{ env.BUILD_NUMBER }}
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/${{ env.SERVICE_NAME }}:$IMAGE_TAG -f user-api/Dockerfile .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.PROJECT_NAME }}/${{ env.SERVICE_NAME }}:$IMAGE_TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}  # 환경 자동 선택

    steps:
      - name: SSH and Deploy allclimb-black
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            IMAGE_TAG=${{ env.BUILD_NUMBER }}
            ENV=${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}
            echo "TAG=$IMAGE_TAG" > /home/allclimb/allclimb-black/.env
            echo "ENV=$ENV" >> /home/allclimb/allclimb-black/.env
            docker login ghcr.io -u ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
            cd /home/allclimb/allclimb-black
            docker compose up -d
